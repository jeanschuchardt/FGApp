@model FGApp.Models.EvolucaoCargosVM

@{
    ViewData["Title"] = "Evolução dos Cargos";
}

<div class="page-header">
    <h3 class="page-title">
        <span class="page-title-icon bg-gradient-primary text-white mr-2">
            <i class="fas fa-chart-area"></i>
        </span> Evolução dos Cargos
    </h3>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Home">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">Evolução dos Cargos</li>
        </ol>
    </nav>
</div>

<form method="post" role="form">
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label">Estado: </label>
                <select asp-for="estadoSelecionado" asp-items="Model.listaEstados" class="form-control"></select>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label">Função: </label>
                <select asp-for="cargoSelecionado" asp-items="Model.listaCargos" class="form-control"></select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group" style="text-align: right;">
                <input type="submit" value="Buscar" class="btn btn-gradient-primary btn-fw" />
            </div>
        </div>
    </div>
</form>

<div class="row">
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <canvas id="myAreaChart" style="width: 100%; min-height: 320px; max-height: 500px;"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Chart plugin JavaScript-->
<script src="~/lib/chart.js/Chart.min.js"></script>

<script>
    var ctx = document.getElementById("myAreaChart");
    var myLineChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Model.arrayDataCargos),
            datasets: [{
                label: "Cargos",
                lineTension: 0.3,
                backgroundColor: "rgba(2,117,216,0.2)",
                borderColor: "rgba(2,117,216,1)",
                pointRadius: 7,
                pointBackgroundColor: "rgba(2,117,216,1)",
                pointBorderColor: "rgba(255,255,255,0.8)",
                pointHoverRadius: 10,
                pointHoverBackgroundColor: "rgba(2,117,216,1)",
                pointHitRadius: 50,
                pointBorderWidth: 2,
                data: @Html.Raw(Model.arrayTotalServidores),
            }],
        },
        options: {
            scales: {
                xAxes: [{
                    time: {
                        unit: 'date'
                    },
                    gridLines: {
                        display: false
                    },
                    ticks: {
                        maxTicksLimit: 7
                    }
                }],
                yAxes: [{
                    ticks: {
                        min: 0
                    },
                    gridLines: {
                        color: "rgba(0, 0, 0, .125)",
                    }
                }],
            },
            legend: {
                display: false
            },
            maintainAspectRatio: false
        }
    });

</script>
